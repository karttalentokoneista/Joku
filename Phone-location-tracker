<!-- index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Phone Location Tracker</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Phone Location Tracker</h1>
    <button onclick="getLocation()">Track My Location</button>
    <div id="location"></div>
    <div id="map"></div>

    <!-- Socket.IO Client -->
    <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
    <!-- Google Maps API (Replace with your own API key) -->
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=initMap" async defer></script>
    <script src="app.js"></script>
</body>
</html>

/* style.css */
body {
    font-family: Arial, sans-serif;
    text-align: center;
    padding: 20px;
}

#map {
    width: 100%;
    height: 500px;
    margin-top: 20px;
}

#location {
    margin-top: 10px;
    font-size: 18px;
}

// app.js
// Connect to the backend using Socket.IO (this will connect to your Glitch backend)
let socket = io('https://your-glitch-backend-url.glitch.me'); // Replace with your Glitch URL
let map;

// Initialize the Google Map
function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 0, lng: 0 },
        zoom: 14
    });
}

// Function to get the user's location
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition, showError);
    } else {
        alert("Geolocation is not supported by this browser.");
    }
}

// Function to handle the location success
function showPosition(position) {
    const lat = position.coords.latitude;
    const lon = position.coords.longitude;

    document.getElementById("location").innerHTML = `Latitude: ${lat}, Longitude: ${lon}`;

    // Update map with the user's location
    const userLocation = new google.maps.LatLng(lat, lon);
    map.setCenter(userLocation);
    new google.maps.Marker({
        position: userLocation,
        map: map,
        title: "Your Location"
    });

    // Send location data to the backend
    socket.emit('location', { lat, lon });
}

// Function to handle geolocation errors
function showError(error) {
    switch (error.code) {
        case error.PERMISSION_DENIED:
            alert("User denied the request for Geolocation.");
            break;
        case error.POSITION_UNAVAILABLE:
            alert("Location information is unavailable.");
            break;
        case error.TIMEOUT:
            alert("The request to get user location timed out.");
            break;
        case error.UNKNOWN_ERROR:
            alert("An unknown error occurred.");
            break;
    }
}
